"use strict";(self.webpackChunkredux_cool_website=self.webpackChunkredux_cool_website||[]).push([[422],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4420:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],c={sidebar_position:2,title:"Problems"},l=void 0,s={unversionedId:"introduction/problems",id:"introduction/problems",isDocsHomePage:!1,title:"Problems",description:"Below are the main problems which we usually face when we use Redux in complex projects.",source:"@site/docs/introduction/problems.md",sourceDirName:"introduction",slug:"/introduction/problems",permalink:"/docs/introduction/problems",editUrl:"https://github.com/Redux-Cool/redux-cool/edit/master/website/docs/introduction/problems.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Problems"},sidebar:"docs",previous:{title:"Motivation",permalink:"/docs/introduction"},next:{title:"Redux-Cool Concepts",permalink:"/docs/concepts"}},u=[{value:"Problem 1: Confusion and Boredom",id:"problem-1-confusion-and-boredom",children:[]},{value:"Problem 2: Define a Single Action In Multiple Reducers",id:"problem-2-define-a-single-action-in-multiple-reducers",children:[]},{value:"Problem 3: Actions With Callback capability",id:"problem-3-actions-with-callback-capability",children:[]}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Below are the main problems which we usually face when we use ",(0,o.kt)("strong",{parentName:"p"},"Redux")," in complex projects."),(0,o.kt)("h2",{id:"problem-1-confusion-and-boredom"},"Problem 1: Confusion and Boredom"),(0,o.kt)("p",null,"In many projects that have various features, there are many cases when it is required to change the state during some actions. We have to create a new ",(0,o.kt)("em",{parentName:"p"},"action type")," every single time,  to add an ",(0,o.kt)("em",{parentName:"p"},"action handler")," for that in reducer, every time we have to ",(0,o.kt)("em",{parentName:"p"},"import")," the appropriate ",(0,o.kt)("em",{parentName:"p"},"action creator"),", create action and dispatch it. This is quite a boring process. Besides, we have many action creators and action handlers, which are just written one under another and not grouped in logical and visual form."),(0,o.kt)("h4",{id:"solution"},"Solution:"),(0,o.kt)("p",null,"In ",(0,o.kt)("strong",{parentName:"p"},"Redux Cool"),",  the reducers are created with the help of a ",(0,o.kt)("strong",{parentName:"p"},"reducer tree")," - the ",(0,o.kt)("strong",{parentName:"p"},"reducer tree")," is a nested javascript object in which ",(0,o.kt)("strong",{parentName:"p"},"action-handler")," functions are defined. Each ",(0,o.kt)("strong",{parentName:"p"},"action-handler")," has its logical place in the ",(0,o.kt)("strong",{parentName:"p"},"reducer tree"),". The hierarchical order of ",(0,o.kt)("strong",{parentName:"p"},"action-handlers")," enables us to define reducer-logic in a grouped and visual form. "),(0,o.kt)("p",null,"Besides, in ",(0,o.kt)("strong",{parentName:"p"},"Redux Cool"),", we don't have a separate ",(0,o.kt)("strong",{parentName:"p"},"action creator")," function for each action, instead, we have one ",(0,o.kt)("inlineCode",{parentName:"p"},"actionsCreator")," action producer with which we can create any action object in dynamic and inline ways."),(0,o.kt)("p",null,"See details: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/concepts/reducer-tree"},"Reducer Tree")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/concepts/reducers-creator"},"Reducers Creator")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/concepts/actions-creator"},"Actions Creator"))),(0,o.kt)("h2",{id:"problem-2-define-a-single-action-in-multiple-reducers"},"Problem 2: Define a Single Action In Multiple Reducers"),(0,o.kt)("p",null,"In complex projects, we are usually splitting our reducer functions into separate reducer functions, each managing independent parts of the state. Then, using the ",(0,o.kt)("strong",{parentName:"p"},"combineReducers")," function of Redux, we are combining it creating one general reducer function. Very often, there is a need to have specific types of actions, which we would like to apply simultaneously to all reducers or to specific reducers. For example, when we have ",(0,o.kt)("strong",{parentName:"p"},"LOGOUT")," action and during that action, we want to erase all the account-specific data that exists in our Redux state."),(0,o.kt)("h4",{id:"solution-1"},"Solution:"),(0,o.kt)("p",null,"The actions have ",(0,o.kt)("strong",{parentName:"p"},"Global")," and ",(0,o.kt)("strong",{parentName:"p"},"Local")," contexts in ",(0,o.kt)("strong",{parentName:"p"},"Redux Cool"),". The actions with Global context can be applied to various Reducers."),(0,o.kt)("p",null,"See details:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/concepts/global-and-local-actions"},"Global And Local Actions"))),(0,o.kt)("h2",{id:"problem-3-actions-with-callback-capability"},"Problem 3: Actions With Callback capability"),(0,o.kt)("p",null,"Usually, when we are using Redux Middlewares for side effects(e.g. redux-saga), there is a need to have actions with ",(0,o.kt)("strong",{parentName:"p"},"Callback capability"),"."),(0,o.kt)("h4",{id:"solution-2"},"Solution:"),(0,o.kt)("p",null,"In ",(0,o.kt)("strong",{parentName:"p"},"Redux Cool"),", all the actions have Callback capability - by default, it is an identity function",(0,o.kt)("em",{parentName:"p"},"(x => x)")," but we can pass any callback function during the creation of action. "),(0,o.kt)("p",null,"See details: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/concepts/actions-creator"},"Actions Creator"))))}d.isMDXComponent=!0}}]);
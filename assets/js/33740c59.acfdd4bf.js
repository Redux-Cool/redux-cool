(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(4),r=n(11),c=(n(0),n(120)),o={sidebar_position:3,title:"Reducers Creator"},i={unversionedId:"concepts/reducers-creator",id:"concepts/reducers-creator",isDocsHomePage:!1,title:"Reducers Creator",description:"reducersCreator is a helper function with which we create reducer functions for Redux.",source:"@site/docs/concepts/reducers-creator.md",sourceDirName:"concepts",slug:"/concepts/reducers-creator",permalink:"/docs/concepts/reducers-creator",editUrl:"https://github.com/Redux-Cool/redux-cool/edit/master/website/docs/concepts/reducers-creator.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Reducers Creator"},sidebar:"docs",previous:{title:"Reducer Tree",permalink:"/docs/concepts/reducer-tree"},next:{title:"Actions Creator",permalink:"/docs/concepts/actions-creator"}},l=[{value:"Instalation",id:"instalation",children:[]},{value:"Usage",id:"usage",children:[]}],b={toc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"reducersCreator")," is a helper function with which we create reducer functions for Redux."),Object(c.b)("h3",{id:"instalation"},"Instalation"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"npm install redux-cool\n")),Object(c.b)("h3",{id:"usage"},"Usage"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'import {reducersCreator} from "redux-cool"\n\nconst initial_state = {\n    profile: {\n        data: null,\n        loading: false,\n    }\n}\n\nconst account_reducer_tree = {\n    PROFILE: {\n        FETCH: {\n            START: (state, action) => {\n                state.profile.loading = true\n            },\n            SUCCESS: (state, action) => {\n                const [data] = action.args\n                state.profile.data = data\n                state.profile.loading = false\n            },\n            FAIL: (state, action) => {\n                state.profile.loading = false\n            }\n        },\n        UPDATE: {\n            EMAIL: (state, action) => {\n                const [email] = action.args\n                state.profile.data.email = email\n            },\n            USERNAME: (state, action) => {\n                const [username] = action.args\n                state.profile.data.username = username\n            }\n        }\n    },\n    CLEAR: (state, action) => {\n        return initial_state\n    }\n}\n\nconst accountReducer = reducersCreator(\n    "ACCOUNT",\n    initial_state,\n    account_reducer_tree,\n)\n\nexport default accountReducer\n')),Object(c.b)("p",null,"As you can see in the example above, we create an ",Object(c.b)("strong",{parentName:"p"},"accountReducer")," by calling the ",Object(c.b)("inlineCode",{parentName:"p"},"reducersCreator")," function and passing it three arguments:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},'"ACCOUNT"'))," : It's a ",Object(c.b)("em",{parentName:"li"},"name")," of the reducer, it can be any string."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"initial_state"))," : It's a ",Object(c.b)("em",{parentName:"li"},"initial state")," of the reducer, it can be any object."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"account_reducer_tree"))," :  It's a ",Object(c.b)("em",{parentName:"li"},Object(c.b)("a",{parentName:"em",href:"/docs/concepts/reducer-tree"},"reducer tree"))," object, in which the action handlers are defined - as an argument ",Object(c.b)("em",{parentName:"li"},"action handler functions")," take ",Object(c.b)("strong",{parentName:"li"},"state")," and ",Object(c.b)("strong",{parentName:"li"},"action")," and update the state. It automatically uses the ",Object(c.b)("a",{parentName:"li",href:"https://immerjs.github.io/immer/"},"immer library")," to do ",Object(c.b)("strong",{parentName:"li"},"immutable updates")," with normal mutative code, like ",Object(c.b)("inlineCode",{parentName:"li"},"state.profile.data.email = email"),". There is no need to manually do immutable updates and return the result. If you are not familiar with the ",Object(c.b)("a",{parentName:"li",href:"https://immerjs.github.io/immer/"},"immer library"),", please look at it, it is very important.")),Object(c.b)("p",null,"As a result, we get the ",Object(c.b)("strong",{parentName:"p"},"accountReducer")," function, which can handle the following type of actions:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Global Context"),Object(c.b)("th",{parentName:"tr",align:null},"Local Context"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"PROFILE/FETCH/START"')),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"ACCOUNT/PROFILE/FETCH/START"'))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"PROFILE/FETCH/SUCCESS"')),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"ACCOUNT/PROFILE/FETCH/SUCCESS"'))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"PROFILE/FETCH/FAIL"')),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"ACCOUNT/PROFILE/FETCH/FAIL"'))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"PROFILE/UPDATE/EMAIL"')),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"ACCOUNT/PROFILE/UPDATE/EMAIL"'))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"PROFILE/UPDATE/USERNAME"')),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"ACCOUNT/PROFILE/UPDATE/USERNAME"'))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"CLEAR"')),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},'"ACCOUNT/CLEAR"'))))),Object(c.b)("p",null,"As you can see, each handler can work with ",Object(c.b)("strong",{parentName:"p"},"two")," types of actions (",Object(c.b)("strong",{parentName:"p"},"Global")," and ",Object(c.b)("strong",{parentName:"p"},"Local"),"), first consisting of the path described in ",Object(c.b)("em",{parentName:"p"},"reducerTree"),", the second is the same as the first type plus the reducer name that should be added in the beginning like ",Object(c.b)("inlineCode",{parentName:"p"},'"CLEAR"')," and ",Object(c.b)("inlineCode",{parentName:"p"},'"ACCOUNT/CLEAR"'),". That is the most important and useful feature of this library. See ",Object(c.b)("a",{parentName:"p",href:"/docs/concepts/global-and-local-actions"},"Global and Local Actions")," for more details."))}s.isMDXComponent=!0},120:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,m=p["".concat(o,".").concat(u)]||p[u]||d[u]||c;return n?r.a.createElement(m,i(i({ref:t},b),{},{components:n})):r.a.createElement(m,i({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var b=2;b<c;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);